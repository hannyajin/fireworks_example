console.clear();
setTimeout(
  (function () {
    var appEl = document.getElementById('app');
    var canvasEl = document.createElement('canvas');
    appEl.appendChild(canvasEl);


    var w = 300;
    var h = (300 * 9 / 16) | 0;

    canvasEl.width = w;
    canvasEl.height = h;
    var ctx = canvasEl.getContext('2d');

    var GLOBALS = {
      width: w,
      height: h,
      gravity: 0.1,
      friction: 0.99,
    };

    var entities = [];

    function Particle (position, speed) {
      this.position = position || { x: 0, y: 0 };
      this.speed = speed || { x: 0, y: 0 };
      this.removed = false;

      this.tick = function () {
        this.position.x += this.speed.x;
        this.position.y += this.speed.y;

        this.speed.y += GLOBALS.gravity;

        this.speed.x *= GLOBALS.friction;

        if (this.position.y > GLOBALS.height) {
          this.removed = true;
        }

        this.onRemoved = function () {
          // do nothing
        };
      };
    };

    function Firework (position, speed) {
      this.position = position || { x: 0, y: 0 };
      this.speed = speed || { x: 0, y: 0 };
      this.removed = false;

      this.tick = function () {
        this.position.x += this.speed.x;
        this.position.y += this.speed.y;

        this.speed.y += GLOBALS.gravity;

        this.speed.x *= GLOBALS.friction;

        if (this.speed.y >= 1) {
          this.removed = true;
        }

        this.onRemoved = function () {
          var pos = this.position;
          // spawn particles on removed
          for (var i = 0; i < 0; i++) {
            var spd = { x: 0, y: 0 };
            var p = new Particle(pos, spd);
            entities.push(p);
          };
        };
      };
    };

    var FPS = 60;
    var MS_PER_FRAME = 1000 / FPS;

    var f = new Firework({
      x: GLOBALS.width / 2,
      y: GLOBALS.height - 20
    }, {
      x: 0,
      y: -5
    });

    entities.push(f);

    function update () {

      // update all entities
      for (var i = 0; i < entities.length; i++) {
        var e = entities[i];
        e.tick();
        if (e.removed) {
          e.onRemoved();
          //entities.splice( entities.indexOf(e), 1);
        };
      }

      /* render */
      // clear the screen
      ctx.clearRect(0, 0, GLOBALS.width, GLOBALS.height);
      ctx.strokeStyle = "white";

      // draw all entities
      for (var i = 0; i < entities.length; i++) {
        var e = entities[i];
        if (!e.removed) {
          var pos = e.position;
          ctx.strokeRect(pos.x, pos.y, 3, 3);
        }
      }

      setTimeout(update, MS_PER_FRAME);
    };

    // kickstart the game loop
    setTimeout(update, MS_PER_FRAME);

    console.log("app loaded");
  })
, 50);

